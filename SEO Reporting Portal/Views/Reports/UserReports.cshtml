@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Reports";
}

<div class="row">
    <div class="col-12">
        <div class="card bg-light mb-3">
            <div class="card-header">
                <span>Reports</span>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-4">
                        <select class="form-control timeperiod-select2">
                            <option value="all">All</option>
                        </select>
                    </div>
                </div>

                <table class="table table-hover" id="report-table">
                    <thead>
                        <tr>
                            <th scope="col"></th>
                            <th scope="col">File</th>
                            <th scope="col">User</th>
                            <th scope="col">Email</th>
                            <th scope="col">Created On</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            $('.timeperiod-select2').select2();
            getReports();

            $('.timeperiod-select2').on('select2:select', function (e) {
                var data = e.params.data;
                getReportsByTimePeriod(data.id);
            });
        });

        async function getReports() {
            const { data } = await axios.get("/api/reports");
            const reportsMarkup = data.reports.map(report => {
                const path = extractFormatIconPath(report.format);
                return `<tr id=${report.id}>
<td><img src=${path}></td>
<td>${report.name}</td>
<td>${report.userFullName}</td>
<td>${report.userEmail}</td>
<td>${report.createdOn}</td>
<td><a href="/reports/download/${report.id}" class="small-box-footer">Download</a></td>
</tr>`});

            $('.timeperiod-select2').append(data.timePeriods.map(t => `<option value=${t}>${t}</option>`))

            $('table tbody').append(reportsMarkup.join(''));
            $('#report-table').DataTable();
        }
        async function getReportsByTimePeriod(timePeriod) {
            const { data } = await axios.get(`/api/reports/getReportsByTimePeriod/${timePeriod}`);
            const reportsMarkup = data.map(report => {
                const path = extractFormatIconPath(report.format);
                return `<tr id=${report.id}>
<td><img src=${path}></td>
<td>${report.name}</td>
<td>${report.userFullName}</td>
<td>${report.userEmail}</td>
<td>${report.createdOn}</td>
<td><a href="/reports/download/${report.id}" class="small-box-footer">Download</a></td>
</tr>`});
            $('table tbody').empty();
            $('table tbody').append(reportsMarkup.join(''));
        }

        function extractFormatIconPath(format) {
            let iconPath = ''
            switch (format) {
                case '.jpg':
                    iconPath = '/images/icons/icon-jpg.png';
                    break;
                case '.png':
                    iconPath = '/images/icons/icon-png.png';
                    break;
                case '.pdf':
                    iconPath = '/images/icons/icon-pdf.png';
                    break;
                case '.doc':
                    iconPath = '/images/icons/icon-word.png';
                    break;
                default:
                    // code block
                    break;
            }

            return iconPath;
        }

    </script>
}
